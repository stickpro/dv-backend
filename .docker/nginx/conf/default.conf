upstream php-upstream {
    server app:9000;
}

server {
    listen 80 deferred reuseport default;
    listen [::]:80 deferred reuseport default;

    server_name _ default_server;
    charset utf-8;
    root /var/www/html/public;
    index index.php index.html;

    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    error_page 404 /index.php;

    rewrite ^([^.]*?\/)\/+(.*)$ $1$2 permanent;

    location ~ (/\.ht|/\.git|/\.gitignore) {
        deny all;
    }

    location ~ /\.(?!well-known).* {
        deny all;
    }

    location = /favicon.png {
        log_not_found off;
        access_log off;
    }

    location = /robots.txt {
        log_not_found off;
        access_log off;
    }

    location ~* ^.+\.(jpg|jpeg|gif|png|js|css|mp3|ogg|mpe?g|avi|zip|gz|bz2?|rar)$ {
        try_files $uri /index.php;
        log_not_found off;
        access_log off;

        expires 30d;
        add_header Cache-Control public;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    }

    location ~* \.(?:svgz?|ttf|ttc|otf|eot|woff2?)$ {
        log_not_found off;
        access_log off;

        expires 30d;
        add_header Cache-Control public;
        add_header Access-Control-Allow-Origin "*";
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;
    }

    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    location ~ \.php$ {
        if ($request_uri ~* "^(.*/)index\.php$") {
            return 301 $1;
        }

        if ($request_method = OPTIONS) {
            add_header Access-Control-Allow-Origin "http://localhost:8080" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, HEAD" always;
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept, X-Recaptcha-Response, X-Sms-Otp, X-Google-Otp, sentry-trace" always;
            add_header Access-Control-Allow-Credentials 'true' always;
        }

        if ($request_method ~* "(GET|POST|PUT|DELETE)") {
            add_header Access-Control-Allow-Origin "http://localhost:8080" always;
            add_header Access-Control-Allow-Headers "Authorization, Origin, X-Requested-With, Content-Type, Accept, X-Recaptcha-Response, X-Sms-Otp, X-Google-Otp, sentry-trace" always;
            add_header Access-Control-Allow-Credentials 'true' always;
        }


        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'; frame-ancestors 'self';" always;

        client_body_buffer_size 64m;
        client_max_body_size 64m;

        include fastcgi_params;

        fastcgi_pass php-upstream;
        fastcgi_send_timeout 21600;
        fastcgi_read_timeout 21600;
        fastcgi_index index.php;
        fastcgi_buffers 8 16k;
        fastcgi_buffer_size 32k;
        fastcgi_param SERVER_NAME $host;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
    }
}
